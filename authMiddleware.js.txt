authMiddleware.js

const jwt = require('jsonwebtoken');
const dotenv = require('dotenv');
const roles = require('../utils/roles');

dotenv.config();

const authenticate = (req, res, next) => {
  const token = req.headers.authorization?.split(' ')[1];
  if (!token) return res.status(401).json({ message: 'No token provided' });

  jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {
    if (err) return res.status(403).json({ message: 'Invalid token' });
    req.user = decoded;
    next();
  });
};

const authorize = (requiredRole) => (req, res, next) => {
  if (!roles[req.user.role].includes(requiredRole)) {
    return res.status(403).json({ message: 'Access denied' });
  }
  next();
};

module.exports = { authenticate, authorize };
